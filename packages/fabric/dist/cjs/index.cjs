"use strict";var D=Object.create;var c=Object.defineProperty;var O=Object.getOwnPropertyDescriptor;var T=Object.getOwnPropertyNames;var N=Object.getPrototypeOf,S=Object.prototype.hasOwnProperty;var R=(t,e)=>{for(var r in e)c(t,r,{get:e[r],enumerable:!0})},h=(t,e,r,a)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of T(e))!S.call(t,n)&&n!==r&&c(t,n,{get:()=>e[n],enumerable:!(a=O(e,n))||a.enumerable});return t};var m=(t,e,r)=>(r=t!=null?D(N(t)):{},h(e||!t||!t.__esModule?c(r,"default",{value:t,enumerable:!0}):r,t)),A=t=>h(c({},"__esModule",{value:!0}),t);var K={};R(K,{FabricGateway:()=>y,displayFabricParameters:()=>F});module.exports=A(K);var l=m(require("@grpc/grpc-js"),1),p=require("@hyperledger/fabric-gateway"),P=m(require("crypto"),1),i=require("fs"),s=m(require("path"),1),H=o("CHANNEL_NAME","mychannel"),I=o("CHAINCODE_NAME","ehrcc"),u=o("MSP_ID","Org1MSP"),g=o("CRYPTO_PATH",s.resolve(__dirname,"..","..","..","organizations","peerOrganizations","org1.example.com")),w=o("KEY_DIRECTORY_PATH",s.resolve(g,"users","User1@org1.example.com","msp","keystore")),C=o("CERT_DIRECTORY_PATH",s.resolve(g,"users","User1@org1.example.com","msp","signcerts")),f=o("TLS_CERT_PATH",s.resolve(g,"peers","peer0.org1.example.com","tls","ca.crt")),v=o("PEER_ENDPOINT","localhost:7051"),E=o("PEER_HOST_ALIAS","peer0.org1.example.com"),x=new TextDecoder;async function $(){let t=await _(C),e=await i.promises.readFile(t);return{mspId:u,credentials:e}}async function _(t){let e=await i.promises.readdir(t);return s.join(t,e[0])}async function k(){let t=await _(w),e=await i.promises.readFile(t),r=P.createPrivateKey(e);return p.signers.newPrivateKeySigner(r)}var y=class{async newGrpcConnection(){let e=await i.promises.readFile(f),r=l.credentials.createSsl(e);return new l.Client(v,r,{"grpc.ssl_target_name_override":E})}async startGateway(){this.client=await this.newGrpcConnection(),this.gateway=(0,p.connect)({client:this.client,identity:await $(),signer:await k(),evaluateOptions:()=>({deadline:Date.now()+5e3}),endorseOptions:()=>({deadline:Date.now()+15e3}),submitOptions:()=>({deadline:Date.now()+5e3}),commitStatusOptions:()=>({deadline:Date.now()+6e4})})}async getContract(e,r){if(this.gateway){let a=this.gateway.getNetwork(r);this.contract=a.getContract(e)}}async recordUpdateOnLedger(e){if(!this.contract)return"";try{let r="samealways";console.log(`
--> Submit Transaction: CreateEHR`);let a=await this.contract.submitTransaction("CreateEHR",e,r),n=x.decode(a),d=JSON.parse(n);return console.log("*** Result:",d),console.log("*** Transaction committed successfully"),JSON.stringify(d)}catch(r){return console.log(r),Promise.reject(r)}}async close(){this.client&&this.gateway&&(this.client.close(),this.gateway.close())}};function o(t,e){return process.env[t]||e}async function F(){console.log(`channelName:       ${H}`),console.log(`chaincodeName:     ${I}`),console.log(`mspId:             ${u}`),console.log(`cryptoPath:        ${g}`),console.log(`keyDirectoryPath:  ${w}`),console.log(`certDirectoryPath: ${C}`),console.log(`tlsCertPath:       ${f}`),console.log(`peerEndpoint:      ${v}`),console.log(`peerHostAlias:     ${E}`)}0&&(module.exports={FabricGateway,displayFabricParameters});
//# sourceMappingURL=index.cjs.map
