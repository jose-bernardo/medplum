"use strict";var u=Object.create;var i=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var P=Object.getPrototypeOf,E=Object.prototype.hasOwnProperty;var f=(s,t)=>{for(var e in t)i(s,e,{get:t[e],enumerable:!0})},h=(s,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of w(t))!E.call(s,o)&&o!==e&&i(s,o,{get:()=>t[o],enumerable:!(n=y(t,o))||n.enumerable});return s};var g=(s,t,e)=>(e=s!=null?u(P(s)):{},h(t||!s||!s.__esModule?i(e,"default",{value:s,enumerable:!0}):e,s)),R=s=>h(i({},"__esModule",{value:!0}),s);var v={};f(v,{FabricGateway:()=>d});module.exports=R(v);var c=g(require("@grpc/grpc-js"),1),l=require("@hyperledger/fabric-gateway"),m=g(require("crypto"),1),a=require("fs"),r=new TextDecoder,d=class{constructor(t){this.options=t,this.displayFabricParameters()}displayFabricParameters(){console.log(`channelName:       ${this.options.channelName}`),console.log(`chaincodeName:     ${this.options.chaincodeName}`),console.log(`mspId:             ${this.options.mspId}`),console.log(`keyPath:           ${this.options.keyPath}`),console.log(`certPath:          ${this.options.certPath}`),console.log(`tlsCertPath:       ${this.options.tlsCertPath}`),console.log(`peerEndpoint:      ${this.options.peerEndpoint}`),console.log(`peerHostAlias:     ${this.options.peerHostAlias}`)}async newSigner(){let t=this.options.keyPath,e=await a.promises.readFile(t),n=m.createPrivateKey(e);return l.signers.newPrivateKeySigner(n)}async newIdentity(){let t=this.options.certPath,e=await a.promises.readFile(t);return{mspId:this.options.mspId,credentials:e}}async newGrpcConnection(){let t=await a.promises.readFile(this.options.tlsCertPath),e=c.credentials.createSsl(t);return new c.Client(this.options.peerEndpoint,e,{"grpc.ssl_target_name_override":this.options.peerHostAlias})}async connect(){this.client=await this.newGrpcConnection(),this.gateway=(0,l.connect)({client:this.client,identity:await this.newIdentity(),signer:await this.newSigner(),evaluateOptions:()=>({deadline:Date.now()+5e3}),endorseOptions:()=>({deadline:Date.now()+15e3}),submitOptions:()=>({deadline:Date.now()+5e3}),commitStatusOptions:()=>({deadline:Date.now()+6e4})});let t=this.gateway.getNetwork(this.options.channelName);this.contract=t.getContract(this.options.chaincodeName)}async readEhrNoLog(t){if(!this.contract)throw new Error("contract not defined");try{console.log(`
--> Evaluate Transaction: ReadEHRNoLog`);let e=await this.contract.evaluateTransaction("ReadEHRNoLog",t),n=r.decode(e),o=JSON.parse(n);return console.log("*** Result:",o),o}catch(e){return console.log(e),Promise.reject(e)}}async recordUpdateOnLedger(t,e){if(!this.contract)throw new Error("contract not defined");try{console.log(`
--> Submit Transaction: CreateEHR`);let n=await this.contract.submitTransaction("CreateEHR",e,t),o=r.decode(n),p=JSON.parse(o);return console.log("*** Result:",p),console.log("*** Transaction committed successfully"),p}catch(n){return console.log(n),Promise.reject(n)}}async recordDeleteOnLedger(t){if(!this.contract)throw new Error("contract not defined");console.log(`
--> Submit Transaction: DeleteEHR`);let e=await this.contract.submitTransaction("DeleteEHR",t),n=r.decode(e),o=JSON.parse(n);return console.log("*** Result:",o),console.log("*** Transaction committed successfully"),o}async recordReadOnLedger(t){if(!this.contract)throw new Error("contract not defined");console.log(`
--> Submit Transaction: ReadEHR`);let e=await this.contract.submitTransaction("ReadEHR",t),n=r.decode(e),o=JSON.parse(n);return console.log("*** Result:",o),console.log("*** Transaction committed successfully"),o}async readActionLogEntry(t){if(!this.contract)throw new Error("contract not defined");try{console.log(`
--> Evaluate Transaction: ReadActionLogEntry`);let e=await this.contract.evaluateTransaction("ReadActionLogEntry",t),n=r.decode(e),o=JSON.parse(n);return console.log("*** Result:",o),o}catch(e){return console.log(e),Promise.reject(e)}}async readActionLogEntryByEhrId(t){console.log(t)}async close(){this.client&&this.gateway&&(this.client.close(),this.gateway.close())}};0&&(module.exports={FabricGateway});
//# sourceMappingURL=index.cjs.map
